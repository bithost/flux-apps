# apiVersion: traefik.io/v1alpha1
# kind: IngressRoute
# metadata:
#   name: whoami
#   namespace: default
# spec:
#   entryPoints:
#     - web
#   routes:
#   - match: Host(`whoami.lanlab.xyz`) # Replace with your domain or IP
#     kind: Rule
#     services:
#     - name: whoami-service
#       port: 80
# apiVersion: traefik.io/v1alpha1
# kind: IngressRoute
# metadata:
#   name: whoami
#   namespace: default  # Keep the IngressRoute namespace
#   annotations:
#     cert-manager.io/cluster-issuer: letsencrypt-production  # This points to your ClusterIssuer
#     kubernetes.io/ingress.class: traefik
# spec:
#   entryPoints:
#     - websecure  # Use the websecure entryPoint for HTTPS traffic
#   routes:
#     - match: Host(`whoami.lanlab.xyz`)  # The host you want to access
#       kind: Rule
#       services:
#         - name: whoami-service  # Keep the service name
#           namespace: default  # Update with the correct namespace
#           passHostHeader: true
#           port: 80  # Ensure this points to the correct HTTP service port
#           scheme: https  # This is for the TLS protocol
#   tls: {}  # This indicates that TLS will be handled by cert-manager and the secret will be managed by Traefik
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: blog-app
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    kubernetes.io/ingress.class: traefik
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`app2.lanlab.xyz`)
      kind: Rule
      services:
        - name: blog-app-service
          namespace: default
          port: 80
      middlewares:
        - name: redirect-https
        # - name: keda-http-addon-interceptor
        #   namespace: keda

  tls:
    secretName: blog-app-tls
# apiVersion: traefik.io/v1alpha1
# kind: IngressRoute
# metadata:
#   name: whoami
#   namespace: default
#   annotations:
#     cert-manager.io/cluster-issuer: letsencrypt-production
#     kubernetes.io/ingress.class: traefik
# spec:
#   entryPoints:
#     - web
#     - websecure
#   routes:
#     - match: Host(`whoami.lanlab.xyz`) && PathPrefix(`/`)
#       kind: Rule
#       services:
#         - name: whoami-service
#           namespace: default
#           port: 80
#       middlewares:
#         - name: redirect-https
#   tls:
#     secretName: whoami-tls